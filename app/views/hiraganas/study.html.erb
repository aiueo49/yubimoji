<%= link_to "戻る", hiraganas_path, class: "link link-neutral" %>
<%= render 'sign_languages', sign_languages: @sign_languages %>

<div id="answer-container" style="display: none;">
  <h2>答え</h2>
  <ul class="flex flex-row space-x-4">
    <% @sign_languages.each do |sign_language| %>
      <li><%= sign_language.character %></li>
    <% end %>
  </ul>
</div>

<button id="show-answer-button">答えを見る</button>

<script>
  // handleVideoEnd関数の定義
  function handleVideoEnd(video) {
    video.currentTime = 0;  // 再生位置を最初に戻す
    video.play();  // 再生を開始
  }

  document.addEventListener('DOMContentLoaded', function() {
    var speedButtons = document.querySelectorAll('.playback-speed-buttons button');
    var answerContainer = document.getElementById('answer-container');
    var totalSlides = document.querySelectorAll('.swiper-slide').length;
    var currentSlideIndex = 0;

        // ボタンがクリックされたときに答えを表示するイベントリスナーを追加
    document.getElementById('show-answer-button').addEventListener('click', function() {
      document.getElementById('answer-container').style.display = 'block';
    });

    console.log('Speed buttons:', speedButtons);  // デバッグ用ログ
    speedButtons.forEach(function(button) {
      button.addEventListener('click', function() {
        var speed = parseFloat(this.getAttribute('data-speed'));
        console.log('Speed button clicked:', speed);  // ログを追加して確認
        changeSwiperSpeed(speed);
      });
    });

    function showAnswer() {
      answerContainer.style.display = 'block';
    }

    function checkSlideCompletion() {
      if (currentSlideIndex >= totalSlides - 1) {
        showAnswer();
      }
    }

    var swiper = new Swiper('.swiper-container', {
      effect: 'fade',  // フェードエフェクトを適用
      spaceBetween: 10,  // スライド間の余白を10pxに設定
      loop: false,  // スライドのループを無効化
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },
      autoplay: {  // 自動再生を有効化
        delay: 1000,  // 初期のスライド間の遅延時間を設定
      },
      on: {
        init: function () {
          var firstSlide = this.slides[0];
          var video = firstSlide.querySelector('video');
          if (video) {
            video.play();
          }
        },
        slideChange: function () {
          currentSlideIndex = this.activeIndex;
          var videos = document.querySelectorAll('video');
          videos.forEach(function(video) {
            video.pause();
          });

          var currentSlide = this.slides[this.activeIndex];
          var video = currentSlide.querySelector('video');

          if (video) {
            video.currentTime = 0;
            video.play();
            video.playbackRate = 1;
          }
          checkSlideCompletion();

          if (this.activeIndex === this.slides.length - 1) {
            this.autoplay.stop();
          }
        }
      }
    });

    window.changeSwiperSpeed = function(speed) {
      console.log('Changing swiper speed to:', speed);
      swiper.autoplay.stop();
      swiper.params.autoplay.delay = 1000 / speed;

      swiper.slideTo(swiper.activeIndex, 0, false);

      var currentSlide = swiper.slides[swiper.activeIndex];
      var video = currentSlide.querySelector('video');
      if (video) {
        video.currentTime = 0;
        video.play();
        video.playbackRate = 1;
      }

      setTimeout(() => {
        swiper.autoplay.start();
      }, 100);
    }
  });
</script>
